<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0108.1039                               -->
<workbook original-version='18.1' source-build='2021.4.3 (20214.22.0108.1039)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (India Covid Death Percentage (T1))' inline='true' name='federated.01bh1rj0njewp419od0q21ow5p3w' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='India Covid Death Percentage (T1)' name='excel-direct.0estzfd0439jx11ckkxew1wqhkzz'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Laksh/OneDrive - Manipal University Jaipur/Data Analytics/Projects/Data Exploration - COVID/Tableau Dashboard/India Covid Death Percentage (T1).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0estzfd0439jx11ckkxew1wqhkzz' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0estzfd0439jx11ckkxew1wqhkzz' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B999C55DB02406EBD5C8AEBBE4C3470]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B999C55DB02406EBD5C8AEBBE4C3470]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B999C55DB02406EBD5C8AEBBE4C3470]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_0B999C55DB02406EBD5C8AEBBE4C3470]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_0B999C55DB02406EBD5C8AEBBE4C3470'>
            <properties context=''>
              <relation connection='excel-direct.0estzfd0439jx11ckkxew1wqhkzz' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Total Death Count in continents (T2))' inline='true' name='federated.0yseocu1yjkbya1629czl01fbsrh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Total Death Count in continents (T2)' name='excel-direct.134adtc1ggxk191c3jf8m13avjsu'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Laksh/OneDrive - Manipal University Jaipur/Data Analytics/Projects/Data Exploration - COVID/Tableau Dashboard/Total Death Count in continents (T2).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.134adtc1ggxk191c3jf8m13avjsu' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.134adtc1ggxk191c3jf8m13avjsu' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_DF1BC8FA027B4315A9508FCDBE99060D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_DF1BC8FA027B4315A9508FCDBE99060D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_DF1BC8FA027B4315A9508FCDBE99060D]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='orange_10_0' type='palette'>
            <map to='#9e3d22'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#c04f23'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#e16220'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f2822a'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f5a847'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ffc685'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_DF1BC8FA027B4315A9508FCDBE99060D'>
            <properties context=''>
              <relation connection='excel-direct.134adtc1ggxk191c3jf8m13avjsu' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Percentage Population Infected (T3))' inline='true' name='federated.0kp55r11x0v0h310ethvg019weoc' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Percentage Population Infected (T3)' name='excel-direct.07q3cyh07qu4ug10k1vt11y71818'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Laksh/OneDrive - Manipal University Jaipur/Data Analytics/Projects/Data Exploration - COVID/Tableau Dashboard/Percentage Population Infected (T3).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.07q3cyh07qu4ug10k1vt11y71818' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D239:no:A1:D239:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.07q3cyh07qu4ug10k1vt11y71818' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D239:no:A1:D239:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D239:no:A1:D239:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_73C32B57B7AF47F59C7914632A6C62ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_73C32B57B7AF47F59C7914632A6C62ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_73C32B57B7AF47F59C7914632A6C62ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_73C32B57B7AF47F59C7914632A6C62ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_73C32B57B7AF47F59C7914632A6C62ED]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_73C32B57B7AF47F59C7914632A6C62ED'>
            <properties context=''>
              <relation connection='excel-direct.07q3cyh07qu4ug10k1vt11y71818' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D239:no:A1:D239:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Percentage population infected (datewise) (T4))' inline='true' name='federated.0wz87wo0bnjbxs1fdp8e51xgdvp6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Percentage population infected (datewise) (T4)' name='excel-direct.1qgaseg0ibp06a15b67k90f7back'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Laksh/OneDrive - Manipal University Jaipur/Data Analytics/Projects/Data Exploration - COVID/Tableau Dashboard/Percentage population infected (datewise) (T4).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1qgaseg0ibp06a15b67k90f7back' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1qgaseg0ibp06a15b67k90f7back' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2E977142AA8F4C97B56039608DF72C24]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2E977142AA8F4C97B56039608DF72C24]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2E977142AA8F4C97B56039608DF72C24]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2E977142AA8F4C97B56039608DF72C24]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2E977142AA8F4C97B56039608DF72C24]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_2E977142AA8F4C97B56039608DF72C24]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' palette='orange_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#9e3d22'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#ba4c23'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d55b21'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#ed6f20'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f48e32'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f6ad51'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ffc685'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Location:nk]&#10;[none:Forecast Indicator:nk]' palette='orange_10_0' type='palette'>
            <map to='#9e3d22'>
              <multibucket>
                <bucket>&quot;United States&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b04723'>
              <multibucket>
                <bucket>&quot;United States&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c35122'>
              <multibucket>
                <bucket>&quot;United Kingdom&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d55b21'>
              <multibucket>
                <bucket>&quot;United Kingdom&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e66720'>
              <multibucket>
                <bucket>&quot;Russia&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ef7925'>
              <multibucket>
                <bucket>&quot;Russia&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f48e32'>
              <multibucket>
                <bucket>&quot;India&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f5a343'>
              <multibucket>
                <bucket>&quot;India&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f9b563'>
              <multibucket>
                <bucket>&quot;Bangladesh&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffc685'>
              <multibucket>
                <bucket>&quot;Bangladesh&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_2E977142AA8F4C97B56039608DF72C24'>
            <properties context=''>
              <relation connection='excel-direct.1qgaseg0ibp06a15b67k90f7back' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>India </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (India Covid Death Percentage (T1))' name='federated.01bh1rj0njewp419od0q21ow5p3w' />
          </datasources>
          <datasource-dependencies datasource='federated.01bh1rj0njewp419od0q21ow5p3w'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01bh1rj0njewp419od0q21ow5p3w].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01bh1rj0njewp419od0q21ow5p3w].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01bh1rj0njewp419od0q21ow5p3w].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01bh1rj0njewp419od0q21ow5p3w].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.01bh1rj0njewp419od0q21ow5p3w].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.01bh1rj0njewp419od0q21ow5p3w].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.01bh1rj0njewp419od0q21ow5p3w].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.01bh1rj0njewp419od0q21ow5p3w].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.01bh1rj0njewp419od0q21ow5p3w].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.01bh1rj0njewp419od0q21ow5p3w].[:Measure Names]' value='176' />
            <format attr='height' value='41' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.01bh1rj0njewp419od0q21ow5p3w].[sum:DeathPercentage:qk]' value='n#,##0.000;-#,##0.000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='border-style' data-class='subtotal' value='none' />
            <format attr='background-color' scope='cols' value='#ffd174' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.01bh1rj0njewp419od0q21ow5p3w].[sum:total_deaths:qk]' value='0' />
            <format attr='text-orientation' field='[federated.01bh1rj0njewp419od0q21ow5p3w].[sum:DeathPercentage:qk]' value='0' />
            <format attr='text-orientation' field='[federated.01bh1rj0njewp419od0q21ow5p3w].[sum:total_cases:qk]' value='0' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='border-color' data-class='subtotal' value='#000000' />
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
            <format attr='background-color' value='#ffedb7' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='1' />
            <format attr='stroke-color' value='#000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.01bh1rj0njewp419od0q21ow5p3w].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.01bh1rj0njewp419od0q21ow5p3w].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{0589713C-1833-446A-860E-5026F8061773}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths per continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Total Death Count in continents (T2))' name='federated.0yseocu1yjkbya1629czl01fbsrh' />
          </datasources>
          <datasource-dependencies datasource='federated.0yseocu1yjkbya1629czl01fbsrh'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0yseocu1yjkbya1629czl01fbsrh].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0yseocu1yjkbya1629czl01fbsrh].[sum:TotalDeathCount:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0yseocu1yjkbya1629czl01fbsrh].[none:location:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0yseocu1yjkbya1629czl01fbsrh].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.0yseocu1yjkbya1629czl01fbsrh].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{5509800C-D726-4317-8636-AAE8AD2F8742}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage of people infected per country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Percentage Population Infected (T3))' name='federated.0kp55r11x0v0h310ethvg019weoc' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0kp55r11x0v0h310ethvg019weoc'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0kp55r11x0v0h310ethvg019weoc].[Longitude (generated)]' field-type='quantitative' max='62360223.56332498' min='18655451.339071892' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0kp55r11x0v0h310ethvg019weoc].[Latitude (generated)]' field-type='quantitative' max='15975204.510818206' min='-5263615.0853451919' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kp55r11x0v0h310ethvg019weoc].[sum:PercentPopulationInfected:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0kp55r11x0v0h310ethvg019weoc].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0kp55r11x0v0h310ethvg019weoc].[none:Location:nk]' />
              <color column='[federated.0kp55r11x0v0h310ethvg019weoc].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.0kp55r11x0v0h310ethvg019weoc].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kp55r11x0v0h310ethvg019weoc].[Latitude (generated)]</rows>
        <cols>[federated.0kp55r11x0v0h310ethvg019weoc].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{BB26FA8D-EC45-4B6E-B65F-D15B2FF95B98}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage of population infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Percentage population infected (datewise) (T4))' name='federated.0wz87wo0bnjbxs1fdp8e51xgdvp6' />
          </datasources>
          <datasource-dependencies datasource='federated.0wz87wo0bnjbxs1fdp8e51xgdvp6'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wz87wo0bnjbxs1fdp8e51xgdvp6].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wz87wo0bnjbxs1fdp8e51xgdvp6].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0wz87wo0bnjbxs1fdp8e51xgdvp6].[fVal:avg:PercentPopulationInfected:qk]' scope='rows' value='Avg. Percentage of Population Infected' />
            <format attr='title' class='0' field='[federated.0wz87wo0bnjbxs1fdp8e51xgdvp6].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0wz87wo0bnjbxs1fdp8e51xgdvp6].[tmn:date:qk]' value='90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wz87wo0bnjbxs1fdp8e51xgdvp6].[none:Location:nk]' />
              <text column='[federated.0wz87wo0bnjbxs1fdp8e51xgdvp6].[none:Location:nk]' />
              <color column='[federated.0wz87wo0bnjbxs1fdp8e51xgdvp6].[none:Forecast Indicator:nk]' />
              <text column='[federated.0wz87wo0bnjbxs1fdp8e51xgdvp6].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wz87wo0bnjbxs1fdp8e51xgdvp6].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.0wz87wo0bnjbxs1fdp8e51xgdvp6].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{28427A52-9CA0-41CA-9962-F99EDC9F6401}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98204' id='8' param='horz' type-v2='layout-flow' w='99024' x='488' y='898'>
            <zone h='98204' id='6' type-v2='layout-basic' w='99024' x='488' y='898'>
              <zone h='13580' id='3' name='Sheet 1' w='34655' x='488' y='898'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='84624' id='5' name='Sheet 2' w='34655' x='488' y='14478'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='56790' id='10' name='Sheet 3' w='57047' x='35143' y='898'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='41414' id='12' name='Sheet 4' w='56010' x='35143' y='57688'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='41414' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.0wz87wo0bnjbxs1fdp8e51xgdvp6].[none:Location:nk]&#10;[federated.0wz87wo0bnjbxs1fdp8e51xgdvp6].[none:Forecast Indicator:nk]' type-v2='color' w='8359' x='91153' y='57688'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='160' h='56790' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='7322' x='92190' y='898'>
                <zone h='16723' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.0yseocu1yjkbya1629czl01fbsrh].[none:location:nk]' type-v2='color' w='7322' x='92190' y='898'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='7969' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.0kp55r11x0v0h310ethvg019weoc].[sum:PercentPopulationInfected:qk]' type-v2='color' w='7322' x='92190' y='17621'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98204' id='20' param='vert' type-v2='layout-flow' w='99024' x='488' y='898'>
                <zone fixed-size='101' h='13580' id='3' is-fixed='true' name='Sheet 1' w='34655' x='488' y='898'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='56790' id='10' is-fixed='true' name='Sheet 3' w='57047' x='35143' y='898'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7969' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.0kp55r11x0v0h310ethvg019weoc].[sum:PercentPopulationInfected:qk]' type-v2='color' w='7322' x='92190' y='17621'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='84624' id='5' is-fixed='true' name='Sheet 2' w='34655' x='488' y='14478'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16723' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.0yseocu1yjkbya1629czl01fbsrh].[none:location:nk]' type-v2='color' w='7322' x='92190' y='898'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41414' id='12' is-fixed='true' name='Sheet 4' w='56010' x='35143' y='57688'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='41414' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.0wz87wo0bnjbxs1fdp8e51xgdvp6].[none:Location:nk]&#10;[federated.0wz87wo0bnjbxs1fdp8e51xgdvp6].[none:Forecast Indicator:nk]' type-v2='color' w='8359' x='91153' y='57688'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6805F631-8165-40B7-B58A-9F1C3FC9D9E4}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.14583' source-height='101'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='159'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01bh1rj0njewp419od0q21ow5p3w].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A92AEB55-F6EE-489C-BA8E-99FECD042D13}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='199'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card pane-specification-id='0' param='[federated.0yseocu1yjkbya1629czl01fbsrh].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0yseocu1yjkbya1629czl01fbsrh].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5D2E03BD-F904-4FD3-B7EB-787A027C6C7E}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='159'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card pane-specification-id='0' param='[federated.0kp55r11x0v0h310ethvg019weoc].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kp55r11x0v0h310ethvg019weoc].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{94DD2E09-AF3C-452F-972F-FB72B39A9C26}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='159'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card pane-specification-id='0' param='[federated.0wz87wo0bnjbxs1fdp8e51xgdvp6].[none:Location:nk]&#10;[federated.0wz87wo0bnjbxs1fdp8e51xgdvp6].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wz87wo0bnjbxs1fdp8e51xgdvp6].[none:Forecast Indicator:nk]</field>
            <field>[federated.0wz87wo0bnjbxs1fdp8e51xgdvp6].[none:Location:nk]</field>
            <field>[federated.0wz87wo0bnjbxs1fdp8e51xgdvp6].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F8302C73-7555-4619-9253-D5FD7E644BBD}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0yseocu1yjkbya1629czl01fbsrh].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0wz87wo0bnjbxs1fdp8e51xgdvp6].[none:Forecast Indicator:nk]</field>
              <field>[federated.0wz87wo0bnjbxs1fdp8e51xgdvp6].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{B84A2382-648E-47C0-B476-772E5769B316}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='65' name='Sheet 1' width='192'>
      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
      436L92KzAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      RFzEaOuvAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      yQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
